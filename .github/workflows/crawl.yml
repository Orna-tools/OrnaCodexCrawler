name: Update Orna Database

on:
  # push:
  #   branches:
  #     # - main 
      
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  update-database:
    runs-on: self-hosted
    steps:
      - name: Checkout OrnaCodexCrawler
        uses: actions/checkout@v4
        
      - name: Checkout OA_Database repository
        uses: actions/checkout@v4
        with:
          repository: 'Orna-tools/OA_Database'
          ref: 'main'
          path: './OA_Database'
          
      - name: Create virtual environment and install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install scrapy tomlkit
          
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          
      - name: Download and Clean Codex Data
        run: ./venv/bin/python main.py download
        
      - name: Clean OA_Database repository
        run: |
          cd OA_Database
          # Remove all files except .git and items.json files
          find . -type f ! -path './.git/*' ! -name 'items.json' -delete
          # Remove empty directories except .git
          find . -type d -empty ! -path './.git*' -delete
          
      - name: Copy cleaned items to OA_Database
        run: |
          # Copy each language's items.json to OA_Database
          for lang_dir in output/cleaned/*/; do
            if [ -d "$lang_dir" ]; then
              lang=$(basename "$lang_dir")
              mkdir -p "OA_Database/$lang"
              if [ -f "$lang_dir/items.json" ]; then
                cp "$lang_dir/items.json" "OA_Database/$lang/"
                echo "Copied items.json for language: $lang"
              fi
            fi
          done
          
      - name: Upload cleaned data artifact
        uses: actions/upload-artifact@v4
        with:
          name: cleaned-orna-data
          path: ./output/cleaned
          
      - name: Push changes to OA_Database
        run: |
          cd OA_Database
          git add .
          if [ ! -z "$(git --no-pager diff --staged)" ]; then
            git commit -s -m "Update items data - $(date '+%Y-%m-%d %H:%M:%S UTC')" -a
            git push
            echo "‚úÖ Successfully pushed updated data to OA_Database"
          else
            echo "‚ÑπÔ∏è No changes detected, skipping push"
          fi
          
      - name: Show completion status
        run: |
          echo "‚úÖ Orna database update completed successfully!"
          echo "üìä Data has been scraped, cleaned, and pushed to OA_Database repository"
          echo "üïê Completed at: $(date)"
